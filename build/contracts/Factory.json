{
  "contractName": "Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenToExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "createExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"createExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenToExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x53a0bb51b8a505e04aaf065de27c0e31cadf38194f8a9a6ec92b7bcd3c5826e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d7019db0d8c1256995eb44b2aabf1189120c0bd01efa653e0eabdbc8cf4742\",\"dweb:/ipfs/QmZRiFEksts7Z2r1xnHb9Jqu4udHyTM6tQVTCyFosMXQAy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc1452b054778f1926419196ef12ae200758a4ee728df69ae1cd13e5c16ca7df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cb252ec7657ba7a91be688cbd263090aa5379e504f488a62d06198e0d630322\",\"dweb:/ipfs/QmW56fDiDirhWfWiKrycXE5UY6tTNtFrYx39ipnSs8mkYb\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x842c66d5965ed0bf77f274732c2a93a7e2223d53171ec9cccc473bde75104ead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cc9f9a6d9c1e2ca9cd191840c0e6017d22bf99d88b368137e43c67f63d17d1c\",\"dweb:/ipfs/Qmd3vUSxY4fRi4AUFMkerjrMFEKRLGVJUGFmxazR1wnPXP\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"project:/contracts/Exchange.sol\":{\"keccak256\":\"0xb711726f390209ae39bcb4300b8093fa96172cbb5c24b34750b77787174726ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9ab63e7b7b66511fd0ceb19648735f1cc41227c765b99e17891fa4706fedaef\",\"dweb:/ipfs/QmTMS5Wn5toZsPtHGmhqu9k7n3pyy4dqTGbx5fWptTWPHa\"]},\"project:/contracts/Factory.sol\":{\"keccak256\":\"0x16a9edfd46a25fc32ebdc9a34e281209e141d95f63fe824bafac391f4ee552e8\",\"urls\":[\"bzz-raw://b9c3a25236fb193187346b36ef44dcac704c0bd1d9c916992132b442b073555d\",\"dweb:/ipfs/QmZ5SGSDq9hmHQXCAJYuv6oDawvVafMZ5WJeBpYJWzLTRR\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506136ba806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306f2bf62146100465780631648f38e14610076578063c3c49a63146100a6575b600080fd5b610060600480360381019061005b9190610390565b6100d6565b60405161006d919061040e565b60405180910390f35b610090600480360381019061008b9190610390565b61013e565b60405161009d919061040e565b60405180910390f35b6100c060048036038101906100bb9190610390565b61033a565b6040516100cd919061040e565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a690610429565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610449565b60405180910390fd5b60008260405161028b9061036d565b610295919061040e565b604051809103906000f0801580156102b1573d6000803e3d6000fd5b509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050919050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61316f806200051683390190565b60008135905061038a816104fe565b92915050565b6000602082840312156103a257600080fd5b60006103b08482850161037b565b91505092915050565b6103c28161047a565b82525050565b60006103d5601583610469565b91506103e0826104ac565b602082019050919050565b60006103f8601783610469565b9150610403826104d5565b602082019050919050565b600060208201905061042360008301846103b9565b92915050565b60006020820190508181036000830152610442816103c8565b9050919050565b60006020820190508181036000830152610462816103eb565b9050919050565b600082825260208201905092915050565b60006104858261048c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f696e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b7f65786368616e676520616c726561647920657869737473000000000000000000600082015250565b6105078161047a565b811461051257600080fd5b5056fe60806040523480156200001157600080fd5b506040516200316f3803806200316f83398181016040528101906200003791906200029a565b6040518060400160405280600b81526020017f4d696e69737761702d56310000000000000000000000000000000000000000008152506040518060400160405280600781526020017f4d494e492d5631000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620001d3565b508060049080519060200190620000d4929190620001d3565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200014a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014190620002ed565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003fc565b828054620001e19062000354565b90600052602060002090601f01602090048101928262000205576000855562000251565b82601f106200022057805160ff191683800117855562000251565b8280016001018555821562000251579182015b828111156200025057825182559160200191906001019062000233565b5b50905062000260919062000264565b5090565b5b808211156200027f57600081600090555060010162000265565b5090565b6000815190506200029481620003e2565b92915050565b600060208284031215620002ad57600080fd5b6000620002bd8482850162000283565b91505092915050565b6000620002d56015836200030f565b9150620002e282620003b9565b602082019050919050565b600060208201905081810360008301526200030881620002c6565b9050919050565b600082825260208201905092915050565b60006200032d8262000334565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200036d57607f821691505b602082108114156200038457620003836200038a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f696e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b620003ed8162000320565b8114620003f957600080fd5b50565b612d63806200040c6000396000f3fe6080604052600436106101355760003560e01c806395d89b41116100ab578063a9059cbb1161006f578063a9059cbb1461045f578063c2507ac11461049c578063dd62ed3e146104d9578063e0486c8a14610516578063f7a7e32414610532578063f979dcd71461055b57610135565b806395d89b4114610363578063966dae0e1461038e5780639c8f9f23146103b95780639d76ea58146103f7578063a457c2d71461042257610135565b8063389d9a40116100fd578063389d9a4014610235578063395093511461025157806351c6590a1461028e57806359bf5d39146102be57806370a08231146102e95780638fc7a25d1461032657610135565b806306fdde031461013a578063095ea7b31461016557806318160ddd146101a257806323b872dd146101cd578063313ce5671461020a575b600080fd5b34801561014657600080fd5b5061014f610577565b60405161015c9190612386565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190611eaa565b610609565b604051610199919061236b565b60405180910390f35b3480156101ae57600080fd5b506101b7610627565b6040516101c491906125c8565b60405180910390f35b3480156101d957600080fd5b506101f460048036038101906101ef9190611e5b565b610631565b604051610201919061236b565b60405180910390f35b34801561021657600080fd5b5061021f610729565b60405161022c9190612635565b60405180910390f35b61024f600480360381019061024a9190611f61565b610732565b005b34801561025d57600080fd5b5061027860048036038101906102739190611eaa565b610740565b604051610285919061236b565b60405180910390f35b6102a860048036038101906102a39190611f0f565b6107ec565b6040516102b591906125c8565b60405180910390f35b3480156102ca57600080fd5b506102d3610a38565b6040516102e091906125c8565b60405180910390f35b3480156102f557600080fd5b50610310600480360381019061030b9190611dcd565b610aea565b60405161031d91906125c8565b60405180910390f35b34801561033257600080fd5b5061034d60048036038101906103489190611f0f565b610b32565b60405161035a91906125c8565b60405180910390f35b34801561036f57600080fd5b50610378610b95565b6040516103859190612386565b60405180910390f35b34801561039a57600080fd5b506103a3610c27565b6040516103b091906122f0565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db9190611f0f565b610c4d565b6040516103ee92919061260c565b60405180910390f35b34801561040357600080fd5b5061040c610dec565b60405161041991906122f0565b60405180910390f35b34801561042e57600080fd5b5061044960048036038101906104449190611eaa565b610e12565b604051610456919061236b565b60405180910390f35b34801561046b57600080fd5b5061048660048036038101906104819190611eaa565b610efd565b604051610493919061236b565b60405180910390f35b3480156104a857600080fd5b506104c360048036038101906104be9190611f0f565b610f1b565b6040516104d091906125c8565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190611e1f565b610f7e565b60405161050d91906125c8565b60405180910390f35b610530600480360381019061052b9190611f9d565b611005565b005b34801561053e57600080fd5b5061055960048036038101906105549190611fd9565b611162565b005b61057560048036038101906105709190611f0f565b6113fe565b005b60606003805461058690612809565b80601f01602080910402602001604051908101604052809291908181526020018280546105b290612809565b80156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b5050505050905090565b600061061d61061661140b565b8484611413565b6001905092915050565b6000600254905090565b600061063e8484846115de565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061068961140b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090612488565b60405180910390fd5b61071d8561071561140b565b858403611413565b60019150509392505050565b60006012905090565b61073c828261185f565b5050565b60006107e261074d61140b565b84846001600061075b61140b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107dd919061266c565b611413565b6001905092915050565b6000806107f7610a38565b14156108cd576000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108619392919061230b565b602060405180830381600087803b15801561087b57600080fd5b505af115801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b39190611ee6565b5060004790506108c3338261197e565b8092505050610a33565b600034476108db919061274d565b905060006108e7610a38565b905060008282346108f891906126f3565b61090291906126c2565b905080851015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e90612528565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109ab9392919061230b565b602060405180830381600087803b1580156109c557600080fd5b505af11580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190611ee6565b5060008434610a0a610627565b610a1491906126f3565b610a1e91906126c2565b9050610a2a338261197e565b80955050505050505b919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9591906122f0565b60206040518083038186803b158015610aad57600080fd5b505afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190611f38565b905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000808211610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6d90612468565b60405180910390fd5b6000610b80610a38565b9050610b8d838247611ade565b915050919050565b606060048054610ba490612809565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd090612809565b8015610c1d5780601f10610bf257610100808354040283529160200191610c1d565b820191906000526020600020905b815481529060010190602001808311610c0057829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008311610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8a90612428565b60405180910390fd5b6000610c9d610627565b8447610ca991906126f3565b610cb391906126c2565b90506000610cbf610627565b85610cc8610a38565b610cd291906126f3565b610cdc91906126c2565b9050610ce83386611b83565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610d2e573d6000803e3d6000fd5b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d8c929190612342565b602060405180830381600087803b158015610da657600080fd5b505af1158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde9190611ee6565b508181935093505050915091565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060016000610e2161140b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610ede576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed590612588565b60405180910390fd5b610ef2610ee961140b565b85858403611413565b600191505092915050565b6000610f11610f0a61140b565b84846115de565b6001905092915050565b6000808211610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5690612448565b60405180910390fd5b6000610f69610a38565b9050610f76834783611ade565b915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061100f610a38565b9050600061101e848347611ade565b905082811015611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105a906124e8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016110c29392919061230b565b602060405180830381600087803b1580156110dc57600080fd5b505af11580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111149190611ee6565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561115b573d6000803e3d6000fd5b5050505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b81526004016111bf91906122f0565b602060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112119190611df6565b90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561127c5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b2906124a8565b60405180910390fd5b60006112c5610a38565b905060006112d4868347611ade565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016113359392919061230b565b602060405180830381600087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113879190611ee6565b508273ffffffffffffffffffffffffffffffffffffffff1663389d9a408287336040518463ffffffff1660e01b81526004016113c49291906125e3565b6000604051808303818588803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b5050505050505050505050565b611408813361185f565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147a90612548565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ea906123e8565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115d191906125c8565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561164e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164590612508565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b5906123a8565b60405180910390fd5b6116c9838383611d5a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561174f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174690612408565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117e2919061266c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161184691906125c8565b60405180910390a3611859848484611d5f565b50505050565b6000611869610a38565b9050600061188334344761187d919061274d565b84611ade565b9050838110156118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bf906124e8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401611925929190612342565b602060405180830381600087803b15801561193f57600080fd5b505af1158015611953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119779190611ee6565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e5906125a8565b60405180910390fd5b6119fa60008383611d5a565b8060026000828254611a0c919061266c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a61919061266c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ac691906125c8565b60405180910390a3611ada60008383611d5f565b5050565b60008083118015611aef5750600082115b611b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2590612568565b60405180910390fd5b6000606385611b3d91906126f3565b905060008382611b4d91906126f3565b9050600082606487611b5f91906126f3565b611b69919061266c565b90508082611b7791906126c2565b93505050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bea906124c8565b60405180910390fd5b611bff82600083611d5a565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7c906123c8565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254611cdc919061274d565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d4191906125c8565b60405180910390a3611d5583600084611d5f565b505050565b505050565b505050565b600081359050611d7381612ce8565b92915050565b600081519050611d8881612ce8565b92915050565b600081519050611d9d81612cff565b92915050565b600081359050611db281612d16565b92915050565b600081519050611dc781612d16565b92915050565b600060208284031215611ddf57600080fd5b6000611ded84828501611d64565b91505092915050565b600060208284031215611e0857600080fd5b6000611e1684828501611d79565b91505092915050565b60008060408385031215611e3257600080fd5b6000611e4085828601611d64565b9250506020611e5185828601611d64565b9150509250929050565b600080600060608486031215611e7057600080fd5b6000611e7e86828701611d64565b9350506020611e8f86828701611d64565b9250506040611ea086828701611da3565b9150509250925092565b60008060408385031215611ebd57600080fd5b6000611ecb85828601611d64565b9250506020611edc85828601611da3565b9150509250929050565b600060208284031215611ef857600080fd5b6000611f0684828501611d8e565b91505092915050565b600060208284031215611f2157600080fd5b6000611f2f84828501611da3565b91505092915050565b600060208284031215611f4a57600080fd5b6000611f5884828501611db8565b91505092915050565b60008060408385031215611f7457600080fd5b6000611f8285828601611da3565b9250506020611f9385828601611d64565b9150509250929050565b60008060408385031215611fb057600080fd5b6000611fbe85828601611da3565b9250506020611fcf85828601611da3565b9150509250929050565b600080600060608486031215611fee57600080fd5b6000611ffc86828701611da3565b935050602061200d86828701611da3565b925050604061201e86828701611d64565b9150509250925092565b61203181612781565b82525050565b61204081612793565b82525050565b600061205182612650565b61205b818561265b565b935061206b8185602086016127d6565b612074816128c8565b840191505092915050565b600061208c60238361265b565b9150612097826128d9565b604082019050919050565b60006120af60228361265b565b91506120ba82612928565b604082019050919050565b60006120d260228361265b565b91506120dd82612977565b604082019050919050565b60006120f560268361265b565b9150612100826129c6565b604082019050919050565b6000612118600e8361265b565b915061212382612a15565b602082019050919050565b600061213b60148361265b565b915061214682612a3e565b602082019050919050565b600061215e60168361265b565b915061216982612a67565b602082019050919050565b600061218160288361265b565b915061218c82612a90565b604082019050919050565b60006121a460188361265b565b91506121af82612adf565b602082019050919050565b60006121c760218361265b565b91506121d282612b08565b604082019050919050565b60006121ea601a8361265b565b91506121f582612b57565b602082019050919050565b600061220d60258361265b565b915061221882612b80565b604082019050919050565b600061223060198361265b565b915061223b82612bcf565b602082019050919050565b600061225360248361265b565b915061225e82612bf8565b604082019050919050565b600061227660108361265b565b915061228182612c47565b602082019050919050565b600061229960258361265b565b91506122a482612c70565b604082019050919050565b60006122bc601f8361265b565b91506122c782612cbf565b602082019050919050565b6122db816127bf565b82525050565b6122ea816127c9565b82525050565b60006020820190506123056000830184612028565b92915050565b60006060820190506123206000830186612028565b61232d6020830185612028565b61233a60408301846122d2565b949350505050565b60006040820190506123576000830185612028565b61236460208301846122d2565b9392505050565b60006020820190506123806000830184612037565b92915050565b600060208201905081810360008301526123a08184612046565b905092915050565b600060208201905081810360008301526123c18161207f565b9050919050565b600060208201905081810360008301526123e1816120a2565b9050919050565b60006020820190508181036000830152612401816120c5565b9050919050565b60006020820190508181036000830152612421816120e8565b9050919050565b600060208201905081810360008301526124418161210b565b9050919050565b600060208201905081810360008301526124618161212e565b9050919050565b6000602082019050818103600083015261248181612151565b9050919050565b600060208201905081810360008301526124a181612174565b9050919050565b600060208201905081810360008301526124c181612197565b9050919050565b600060208201905081810360008301526124e1816121ba565b9050919050565b60006020820190508181036000830152612501816121dd565b9050919050565b6000602082019050818103600083015261252181612200565b9050919050565b6000602082019050818103600083015261254181612223565b9050919050565b6000602082019050818103600083015261256181612246565b9050919050565b6000602082019050818103600083015261258181612269565b9050919050565b600060208201905081810360008301526125a18161228c565b9050919050565b600060208201905081810360008301526125c1816122af565b9050919050565b60006020820190506125dd60008301846122d2565b92915050565b60006040820190506125f860008301856122d2565b6126056020830184612028565b9392505050565b600060408201905061262160008301856122d2565b61262e60208301846122d2565b9392505050565b600060208201905061264a60008301846122e1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612677826127bf565b9150612682836127bf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126b7576126b661283b565b5b828201905092915050565b60006126cd826127bf565b91506126d8836127bf565b9250826126e8576126e761286a565b5b828204905092915050565b60006126fe826127bf565b9150612709836127bf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127425761274161283b565b5b828202905092915050565b6000612758826127bf565b9150612763836127bf565b9250828210156127765761277561283b565b5b828203905092915050565b600061278c8261279f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156127f45780820151818401526020810190506127d9565b83811115612803576000848401525b50505050565b6000600282049050600182168061282157607f821691505b6020821081141561283557612834612899565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f696e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f657468536f6c6420697320746f6f20736d616c6c000000000000000000000000600082015250565b7f746f6b656e536f6c6420697320746f6f20736d616c6c00000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f696e76616c69642065786368616e676520616464726573730000000000000000600082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f696e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f696e73756666696369656e7420746f6b656e20616d6f756e7400000000000000600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f696e76616c696420726573657276657300000000000000000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b612cf181612781565b8114612cfc57600080fd5b50565b612d0881612793565b8114612d1357600080fd5b50565b612d1f816127bf565b8114612d2a57600080fd5b5056fea26469706673582212201f53432c455d196c0e2f630297d93d2ad2a48871e5593cccbdb95dfbfdb5818364736f6c63430008040033a264697066735822122060d4c1a9fdcba0136722bca029d325cb14f83d7a2364c17d3c22317948af2d6864736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806306f2bf62146100465780631648f38e14610076578063c3c49a63146100a6575b600080fd5b610060600480360381019061005b9190610390565b6100d6565b60405161006d919061040e565b60405180910390f35b610090600480360381019061008b9190610390565b61013e565b60405161009d919061040e565b60405180910390f35b6100c060048036038101906100bb9190610390565b61033a565b6040516100cd919061040e565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156101af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a690610429565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461027c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027390610449565b60405180910390fd5b60008260405161028b9061036d565b610295919061040e565b604051809103906000f0801580156102b1573d6000803e3d6000fd5b509050806000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050919050565b60006020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61316f806200051683390190565b60008135905061038a816104fe565b92915050565b6000602082840312156103a257600080fd5b60006103b08482850161037b565b91505092915050565b6103c28161047a565b82525050565b60006103d5601583610469565b91506103e0826104ac565b602082019050919050565b60006103f8601783610469565b9150610403826104d5565b602082019050919050565b600060208201905061042360008301846103b9565b92915050565b60006020820190508181036000830152610442816103c8565b9050919050565b60006020820190508181036000830152610462816103eb565b9050919050565b600082825260208201905092915050565b60006104858261048c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f696e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b7f65786368616e676520616c726561647920657869737473000000000000000000600082015250565b6105078161047a565b811461051257600080fd5b5056fe60806040523480156200001157600080fd5b506040516200316f3803806200316f83398181016040528101906200003791906200029a565b6040518060400160405280600b81526020017f4d696e69737761702d56310000000000000000000000000000000000000000008152506040518060400160405280600781526020017f4d494e492d5631000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb929190620001d3565b508060049080519060200190620000d4929190620001d3565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156200014a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014190620002ed565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620003fc565b828054620001e19062000354565b90600052602060002090601f01602090048101928262000205576000855562000251565b82601f106200022057805160ff191683800117855562000251565b8280016001018555821562000251579182015b828111156200025057825182559160200191906001019062000233565b5b50905062000260919062000264565b5090565b5b808211156200027f57600081600090555060010162000265565b5090565b6000815190506200029481620003e2565b92915050565b600060208284031215620002ad57600080fd5b6000620002bd8482850162000283565b91505092915050565b6000620002d56015836200030f565b9150620002e282620003b9565b602082019050919050565b600060208201905081810360008301526200030881620002c6565b9050919050565b600082825260208201905092915050565b60006200032d8262000334565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600060028204905060018216806200036d57607f821691505b602082108114156200038457620003836200038a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f696e76616c696420746f6b656e20616464726573730000000000000000000000600082015250565b620003ed8162000320565b8114620003f957600080fd5b50565b612d63806200040c6000396000f3fe6080604052600436106101355760003560e01c806395d89b41116100ab578063a9059cbb1161006f578063a9059cbb1461045f578063c2507ac11461049c578063dd62ed3e146104d9578063e0486c8a14610516578063f7a7e32414610532578063f979dcd71461055b57610135565b806395d89b4114610363578063966dae0e1461038e5780639c8f9f23146103b95780639d76ea58146103f7578063a457c2d71461042257610135565b8063389d9a40116100fd578063389d9a4014610235578063395093511461025157806351c6590a1461028e57806359bf5d39146102be57806370a08231146102e95780638fc7a25d1461032657610135565b806306fdde031461013a578063095ea7b31461016557806318160ddd146101a257806323b872dd146101cd578063313ce5671461020a575b600080fd5b34801561014657600080fd5b5061014f610577565b60405161015c9190612386565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190611eaa565b610609565b604051610199919061236b565b60405180910390f35b3480156101ae57600080fd5b506101b7610627565b6040516101c491906125c8565b60405180910390f35b3480156101d957600080fd5b506101f460048036038101906101ef9190611e5b565b610631565b604051610201919061236b565b60405180910390f35b34801561021657600080fd5b5061021f610729565b60405161022c9190612635565b60405180910390f35b61024f600480360381019061024a9190611f61565b610732565b005b34801561025d57600080fd5b5061027860048036038101906102739190611eaa565b610740565b604051610285919061236b565b60405180910390f35b6102a860048036038101906102a39190611f0f565b6107ec565b6040516102b591906125c8565b60405180910390f35b3480156102ca57600080fd5b506102d3610a38565b6040516102e091906125c8565b60405180910390f35b3480156102f557600080fd5b50610310600480360381019061030b9190611dcd565b610aea565b60405161031d91906125c8565b60405180910390f35b34801561033257600080fd5b5061034d60048036038101906103489190611f0f565b610b32565b60405161035a91906125c8565b60405180910390f35b34801561036f57600080fd5b50610378610b95565b6040516103859190612386565b60405180910390f35b34801561039a57600080fd5b506103a3610c27565b6040516103b091906122f0565b60405180910390f35b3480156103c557600080fd5b506103e060048036038101906103db9190611f0f565b610c4d565b6040516103ee92919061260c565b60405180910390f35b34801561040357600080fd5b5061040c610dec565b60405161041991906122f0565b60405180910390f35b34801561042e57600080fd5b5061044960048036038101906104449190611eaa565b610e12565b604051610456919061236b565b60405180910390f35b34801561046b57600080fd5b5061048660048036038101906104819190611eaa565b610efd565b604051610493919061236b565b60405180910390f35b3480156104a857600080fd5b506104c360048036038101906104be9190611f0f565b610f1b565b6040516104d091906125c8565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190611e1f565b610f7e565b60405161050d91906125c8565b60405180910390f35b610530600480360381019061052b9190611f9d565b611005565b005b34801561053e57600080fd5b5061055960048036038101906105549190611fd9565b611162565b005b61057560048036038101906105709190611f0f565b6113fe565b005b60606003805461058690612809565b80601f01602080910402602001604051908101604052809291908181526020018280546105b290612809565b80156105ff5780601f106105d4576101008083540402835291602001916105ff565b820191906000526020600020905b8154815290600101906020018083116105e257829003601f168201915b5050505050905090565b600061061d61061661140b565b8484611413565b6001905092915050565b6000600254905090565b600061063e8484846115de565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061068961140b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090612488565b60405180910390fd5b61071d8561071561140b565b858403611413565b60019150509392505050565b60006012905090565b61073c828261185f565b5050565b60006107e261074d61140b565b84846001600061075b61140b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107dd919061266c565b611413565b6001905092915050565b6000806107f7610a38565b14156108cd576000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016108619392919061230b565b602060405180830381600087803b15801561087b57600080fd5b505af115801561088f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b39190611ee6565b5060004790506108c3338261197e565b8092505050610a33565b600034476108db919061274d565b905060006108e7610a38565b905060008282346108f891906126f3565b61090291906126c2565b905080851015610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e90612528565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016109ab9392919061230b565b602060405180830381600087803b1580156109c557600080fd5b505af11580156109d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fd9190611ee6565b5060008434610a0a610627565b610a1491906126f3565b610a1e91906126c2565b9050610a2a338261197e565b80955050505050505b919050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9591906122f0565b60206040518083038186803b158015610aad57600080fd5b505afa158015610ac1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae59190611f38565b905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000808211610b76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6d90612468565b60405180910390fd5b6000610b80610a38565b9050610b8d838247611ade565b915050919050565b606060048054610ba490612809565b80601f0160208091040260200160405190810160405280929190818152602001828054610bd090612809565b8015610c1d5780601f10610bf257610100808354040283529160200191610c1d565b820191906000526020600020905b815481529060010190602001808311610c0057829003601f168201915b5050505050905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008311610c93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8a90612428565b60405180910390fd5b6000610c9d610627565b8447610ca991906126f3565b610cb391906126c2565b90506000610cbf610627565b85610cc8610a38565b610cd291906126f3565b610cdc91906126c2565b9050610ce83386611b83565b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610d2e573d6000803e3d6000fd5b50600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d8c929190612342565b602060405180830381600087803b158015610da657600080fd5b505af1158015610dba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dde9190611ee6565b508181935093505050915091565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060016000610e2161140b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610ede576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed590612588565b60405180910390fd5b610ef2610ee961140b565b85858403611413565b600191505092915050565b6000610f11610f0a61140b565b84846115de565b6001905092915050565b6000808211610f5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5690612448565b60405180910390fd5b6000610f69610a38565b9050610f76834783611ade565b915050919050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061100f610a38565b9050600061101e848347611ade565b905082811015611063576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105a906124e8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016110c29392919061230b565b602060405180830381600087803b1580156110dc57600080fd5b505af11580156110f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111149190611ee6565b503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561115b573d6000803e3d6000fd5b5050505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166306f2bf62836040518263ffffffff1660e01b81526004016111bf91906122f0565b602060405180830381600087803b1580156111d957600080fd5b505af11580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112119190611df6565b90503073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415801561127c5750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b6112bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112b2906124a8565b60405180910390fd5b60006112c5610a38565b905060006112d4868347611ade565b9050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330896040518463ffffffff1660e01b81526004016113359392919061230b565b602060405180830381600087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113879190611ee6565b508273ffffffffffffffffffffffffffffffffffffffff1663389d9a408287336040518463ffffffff1660e01b81526004016113c49291906125e3565b6000604051808303818588803b1580156113dd57600080fd5b505af11580156113f1573d6000803e3d6000fd5b5050505050505050505050565b611408813361185f565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611483576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147a90612548565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ea906123e8565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516115d191906125c8565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561164e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161164590612508565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156116be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b5906123a8565b60405180910390fd5b6116c9838383611d5a565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561174f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161174690612408565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546117e2919061266c565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161184691906125c8565b60405180910390a3611859848484611d5f565b50505050565b6000611869610a38565b9050600061188334344761187d919061274d565b84611ade565b9050838110156118c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118bf906124e8565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84836040518363ffffffff1660e01b8152600401611925929190612342565b602060405180830381600087803b15801561193f57600080fd5b505af1158015611953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119779190611ee6565b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156119ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e5906125a8565b60405180910390fd5b6119fa60008383611d5a565b8060026000828254611a0c919061266c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a61919061266c565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ac691906125c8565b60405180910390a3611ada60008383611d5f565b5050565b60008083118015611aef5750600082115b611b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b2590612568565b60405180910390fd5b6000606385611b3d91906126f3565b905060008382611b4d91906126f3565b9050600082606487611b5f91906126f3565b611b69919061266c565b90508082611b7791906126c2565b93505050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611bf3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bea906124c8565b60405180910390fd5b611bff82600083611d5a565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7c906123c8565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508160026000828254611cdc919061274d565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611d4191906125c8565b60405180910390a3611d5583600084611d5f565b505050565b505050565b505050565b600081359050611d7381612ce8565b92915050565b600081519050611d8881612ce8565b92915050565b600081519050611d9d81612cff565b92915050565b600081359050611db281612d16565b92915050565b600081519050611dc781612d16565b92915050565b600060208284031215611ddf57600080fd5b6000611ded84828501611d64565b91505092915050565b600060208284031215611e0857600080fd5b6000611e1684828501611d79565b91505092915050565b60008060408385031215611e3257600080fd5b6000611e4085828601611d64565b9250506020611e5185828601611d64565b9150509250929050565b600080600060608486031215611e7057600080fd5b6000611e7e86828701611d64565b9350506020611e8f86828701611d64565b9250506040611ea086828701611da3565b9150509250925092565b60008060408385031215611ebd57600080fd5b6000611ecb85828601611d64565b9250506020611edc85828601611da3565b9150509250929050565b600060208284031215611ef857600080fd5b6000611f0684828501611d8e565b91505092915050565b600060208284031215611f2157600080fd5b6000611f2f84828501611da3565b91505092915050565b600060208284031215611f4a57600080fd5b6000611f5884828501611db8565b91505092915050565b60008060408385031215611f7457600080fd5b6000611f8285828601611da3565b9250506020611f9385828601611d64565b9150509250929050565b60008060408385031215611fb057600080fd5b6000611fbe85828601611da3565b9250506020611fcf85828601611da3565b9150509250929050565b600080600060608486031215611fee57600080fd5b6000611ffc86828701611da3565b935050602061200d86828701611da3565b925050604061201e86828701611d64565b9150509250925092565b61203181612781565b82525050565b61204081612793565b82525050565b600061205182612650565b61205b818561265b565b935061206b8185602086016127d6565b612074816128c8565b840191505092915050565b600061208c60238361265b565b9150612097826128d9565b604082019050919050565b60006120af60228361265b565b91506120ba82612928565b604082019050919050565b60006120d260228361265b565b91506120dd82612977565b604082019050919050565b60006120f560268361265b565b9150612100826129c6565b604082019050919050565b6000612118600e8361265b565b915061212382612a15565b602082019050919050565b600061213b60148361265b565b915061214682612a3e565b602082019050919050565b600061215e60168361265b565b915061216982612a67565b602082019050919050565b600061218160288361265b565b915061218c82612a90565b604082019050919050565b60006121a460188361265b565b91506121af82612adf565b602082019050919050565b60006121c760218361265b565b91506121d282612b08565b604082019050919050565b60006121ea601a8361265b565b91506121f582612b57565b602082019050919050565b600061220d60258361265b565b915061221882612b80565b604082019050919050565b600061223060198361265b565b915061223b82612bcf565b602082019050919050565b600061225360248361265b565b915061225e82612bf8565b604082019050919050565b600061227660108361265b565b915061228182612c47565b602082019050919050565b600061229960258361265b565b91506122a482612c70565b604082019050919050565b60006122bc601f8361265b565b91506122c782612cbf565b602082019050919050565b6122db816127bf565b82525050565b6122ea816127c9565b82525050565b60006020820190506123056000830184612028565b92915050565b60006060820190506123206000830186612028565b61232d6020830185612028565b61233a60408301846122d2565b949350505050565b60006040820190506123576000830185612028565b61236460208301846122d2565b9392505050565b60006020820190506123806000830184612037565b92915050565b600060208201905081810360008301526123a08184612046565b905092915050565b600060208201905081810360008301526123c18161207f565b9050919050565b600060208201905081810360008301526123e1816120a2565b9050919050565b60006020820190508181036000830152612401816120c5565b9050919050565b60006020820190508181036000830152612421816120e8565b9050919050565b600060208201905081810360008301526124418161210b565b9050919050565b600060208201905081810360008301526124618161212e565b9050919050565b6000602082019050818103600083015261248181612151565b9050919050565b600060208201905081810360008301526124a181612174565b9050919050565b600060208201905081810360008301526124c181612197565b9050919050565b600060208201905081810360008301526124e1816121ba565b9050919050565b60006020820190508181036000830152612501816121dd565b9050919050565b6000602082019050818103600083015261252181612200565b9050919050565b6000602082019050818103600083015261254181612223565b9050919050565b6000602082019050818103600083015261256181612246565b9050919050565b6000602082019050818103600083015261258181612269565b9050919050565b600060208201905081810360008301526125a18161228c565b9050919050565b600060208201905081810360008301526125c1816122af565b9050919050565b60006020820190506125dd60008301846122d2565b92915050565b60006040820190506125f860008301856122d2565b6126056020830184612028565b9392505050565b600060408201905061262160008301856122d2565b61262e60208301846122d2565b9392505050565b600060208201905061264a60008301846122e1565b92915050565b600081519050919050565b600082825260208201905092915050565b6000612677826127bf565b9150612682836127bf565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126b7576126b661283b565b5b828201905092915050565b60006126cd826127bf565b91506126d8836127bf565b9250826126e8576126e761286a565b5b828204905092915050565b60006126fe826127bf565b9150612709836127bf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156127425761274161283b565b5b828202905092915050565b6000612758826127bf565b9150612763836127bf565b9250828210156127765761277561283b565b5b828203905092915050565b600061278c8261279f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156127f45780820151818401526020810190506127d9565b83811115612803576000848401525b50505050565b6000600282049050600182168061282157607f821691505b6020821081141561283557612834612899565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f696e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b7f657468536f6c6420697320746f6f20736d616c6c000000000000000000000000600082015250565b7f746f6b656e536f6c6420697320746f6f20736d616c6c00000000000000000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b7f696e76616c69642065786368616e676520616464726573730000000000000000600082015250565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f696e73756666696369656e74206f757470757420616d6f756e74000000000000600082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f696e73756666696369656e7420746f6b656e20616d6f756e7400000000000000600082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f696e76616c696420726573657276657300000000000000000000000000000000600082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b612cf181612781565b8114612cfc57600080fd5b50565b612d0881612793565b8114612d1357600080fd5b50565b612d1f816127bf565b8114612d2a57600080fd5b5056fea26469706673582212201f53432c455d196c0e2f630297d93d2ad2a48871e5593cccbdb95dfbfdb5818364736f6c63430008040033a264697066735822122060d4c1a9fdcba0136722bca029d325cb14f83d7a2364c17d3c22317948af2d6864736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3256:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:6",
                "type": ""
              }
            ],
            "src": "7:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:196:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "273:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "276:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "290:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "305:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "309:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "334:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "369:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "380:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "365:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "365:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "389:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "344:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "344:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "334:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:6",
                "type": ""
              }
            ],
            "src": "152:262:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "485:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "502:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "525:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "507:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "507:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "495:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "495:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "473:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "480:3:6",
                "type": ""
              }
            ],
            "src": "420:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "690:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "700:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "766:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "771:2:6",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "707:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "700:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "872:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
                      "nodeType": "YulIdentifier",
                      "src": "783:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "783:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "885:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "896:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "901:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "892:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "885:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "678:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "686:3:6",
                "type": ""
              }
            ],
            "src": "544:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1062:220:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1072:74:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1138:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1143:2:6",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1079:58:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:67:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1072:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1244:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a",
                      "nodeType": "YulIdentifier",
                      "src": "1155:88:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1155:93:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1155:93:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1268:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1273:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1264:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1257:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1050:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1058:3:6",
                "type": ""
              }
            ],
            "src": "916:366:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1386:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1396:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1408:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1419:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1404:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1404:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1396:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1476:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1489:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1500:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1485:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1432:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1432:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1432:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1358:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1370:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1381:4:6",
                "type": ""
              }
            ],
            "src": "1288:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1687:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1709:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1720:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1705:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1705:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1697:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1744:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1755:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1740:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1740:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1763:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1769:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1759:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1759:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1733:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1733:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1733:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1789:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1923:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1797:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1797:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1789:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1667:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1682:4:6",
                "type": ""
              }
            ],
            "src": "1516:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2112:248:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2122:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2134:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2145:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2130:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2130:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2122:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2169:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2180:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2165:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2165:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2188:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2194:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2184:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2184:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2158:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2158:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2158:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2214:139:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2348:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2222:124:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2222:131:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2214:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2092:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2107:4:6",
                "type": ""
              }
            ],
            "src": "1941:419:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2462:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2479:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2484:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2472:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2472:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2500:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2519:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2524:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2515:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2500:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2434:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2439:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2450:11:6",
                "type": ""
              }
            ],
            "src": "2366:169:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2586:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2596:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2625:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2607:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2596:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2568:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2578:7:6",
                "type": ""
              }
            ],
            "src": "2541:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2688:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2698:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2713:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2720:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2709:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2709:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2698:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2670:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2680:7:6",
                "type": ""
              }
            ],
            "src": "2643:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2881:65:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2903:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2911:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2899:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2899:14:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2915:23:6",
                        "type": "",
                        "value": "invalid token address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2892:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2892:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2892:47:6"
                }
              ]
            },
            "name": "store_literal_in_memory_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2873:6:6",
                "type": ""
              }
            ],
            "src": "2775:171:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3058:67:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3080:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3088:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3076:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3076:14:6"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3092:25:6",
                        "type": "",
                        "value": "exchange already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3069:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3069:49:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3069:49:6"
                }
              ]
            },
            "name": "store_literal_in_memory_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3050:6:6",
                "type": ""
              }
            ],
            "src": "2952:173:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3174:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3231:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3240:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3243:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3233:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3233:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3233:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3197:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3222:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3204:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3204:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3194:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3194:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3187:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "3184:2:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3167:5:6",
                "type": ""
              }
            ],
            "src": "3131:122:6"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function store_literal_in_memory_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid token address\")\n\n    }\n\n    function store_literal_in_memory_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"exchange already exists\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "51:575:5:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "51:575:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;502:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;127:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;72:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;502:122;567:7;589:15;:30;605:13;589:30;;;;;;;;;;;;;;;;;;;;;;;;;582:37;;502:122;;;:::o;127:371::-;190:7;238:1;213:27;;:13;:27;;;;205:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;322:1;280:44;;:15;:30;296:13;280:30;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;272:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;359:17;392:13;379:27;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;359:47;;453:8;412:15;:30;428:13;412:30;;;;;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;;484:8;469:24;;;127:371;;;:::o;72:50::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:6:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:262::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;276:1;273;266:12;228:2;319:1;344:53;389:7;380:6;369:9;365:22;344:53;:::i;:::-;334:63;;290:117;218:196;;;;:::o;420:118::-;507:24;525:5;507:24;:::i;:::-;502:3;495:37;485:53;;:::o;544:366::-;686:3;707:67;771:2;766:3;707:67;:::i;:::-;700:74;;783:93;872:3;783:93;:::i;:::-;901:2;896:3;892:12;885:19;;690:220;;;:::o;916:366::-;1058:3;1079:67;1143:2;1138:3;1079:67;:::i;:::-;1072:74;;1155:93;1244:3;1155:93;:::i;:::-;1273:2;1268:3;1264:12;1257:19;;1062:220;;;:::o;1288:222::-;1381:4;1419:2;1408:9;1404:18;1396:26;;1432:71;1500:1;1489:9;1485:17;1476:6;1432:71;:::i;:::-;1386:124;;;;:::o;1516:419::-;1682:4;1720:2;1709:9;1705:18;1697:26;;1769:9;1763:4;1759:20;1755:1;1744:9;1740:17;1733:47;1797:131;1923:4;1797:131;:::i;:::-;1789:139;;1687:248;;;:::o;1941:419::-;2107:4;2145:2;2134:9;2130:18;2122:26;;2194:9;2188:4;2184:20;2180:1;2169:9;2165:17;2158:47;2222:131;2348:4;2222:131;:::i;:::-;2214:139;;2112:248;;;:::o;2366:169::-;2450:11;2484:6;2479:3;2472:19;2524:4;2519:3;2515:14;2500:29;;2462:73;;;;:::o;2541:96::-;2578:7;2607:24;2625:5;2607:24;:::i;:::-;2596:35;;2586:51;;;:::o;2643:126::-;2680:7;2720:42;2713:5;2709:54;2698:65;;2688:81;;;:::o;2775:171::-;2915:23;2911:1;2903:6;2899:14;2892:47;2881:65;:::o;2952:173::-;3092:25;3088:1;3080:6;3076:14;3069:49;3058:67;:::o;3131:122::-;3204:24;3222:5;3204:24;:::i;:::-;3197:5;3194:35;3184:2;;3243:1;3240;3233:12;3184:2;3174:79;:::o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"./Exchange.sol\";\n\ncontract Factory {\n  mapping(address => address) public tokenToExchange;\n\n  function createExchange(address _tokenAddress) public returns (address) {\n    require(_tokenAddress != address(0), \"invalid token address\");\n    require(tokenToExchange[_tokenAddress] == address(0), \"exchange already exists\");\n\n    Exchange exchange = new Exchange(_tokenAddress);\n    tokenToExchange[_tokenAddress] = address(exchange);\n\n    return address(exchange);\n  }\n\n  function getExchange(address _tokenAddress) public view returns (address) {\n    return tokenToExchange[_tokenAddress];\n  }\n}",
  "sourcePath": "/Users/yuhuiyuan/code/miniswap/contracts/Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        670
      ],
      "ERC20": [
        545
      ],
      "Exchange": [
        1241
      ],
      "Factory": [
        1314
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "IExchange": [
        690
      ],
      "IFactory": [
        682
      ]
    },
    "id": 1315,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1243,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "project:/contracts/Exchange.sol",
        "file": "./Exchange.sol",
        "id": 1244,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1315,
        "sourceUnit": 1242,
        "src": "25:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1241
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1314,
        "linearizedBaseContracts": [
          1314
        ],
        "name": "Factory",
        "nameLocation": "60:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c3c49a63",
            "id": 1248,
            "mutability": "mutable",
            "name": "tokenToExchange",
            "nameLocation": "107:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 1314,
            "src": "72:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1247,
              "keyType": {
                "id": 1245,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "80:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "72:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1246,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "91:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1300,
              "nodeType": "Block",
              "src": "199:299:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1256,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1250,
                          "src": "213:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "238:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "230:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1257,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "230:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "230:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "213:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420746f6b656e2061646472657373",
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "242:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
                          "typeString": "literal_string \"invalid token address\""
                        },
                        "value": "invalid token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
                          "typeString": "literal_string \"invalid token address\""
                        }
                      ],
                      "id": 1255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "205:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "205:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "205:61:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1266,
                            "name": "tokenToExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1248,
                            "src": "280:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1268,
                          "indexExpression": {
                            "id": 1267,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "296:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "280:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "322:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "314:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1269,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "314:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "314:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "280:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786368616e676520616c726561647920657869737473",
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "326:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a",
                          "typeString": "literal_string \"exchange already exists\""
                        },
                        "value": "exchange already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a",
                          "typeString": "literal_string \"exchange already exists\""
                        }
                      ],
                      "id": 1265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "272:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "272:80:5"
                },
                {
                  "assignments": [
                    1279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1279,
                      "mutability": "mutable",
                      "name": "exchange",
                      "nameLocation": "368:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1300,
                      "src": "359:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$1241",
                        "typeString": "contract Exchange"
                      },
                      "typeName": {
                        "id": 1278,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1277,
                          "name": "Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1241,
                          "src": "359:8:5"
                        },
                        "referencedDeclaration": 1241,
                        "src": "359:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1285,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1283,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "392:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "379:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Exchange_$1241_$",
                        "typeString": "function (address) returns (contract Exchange)"
                      },
                      "typeName": {
                        "id": 1281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1280,
                          "name": "Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1241,
                          "src": "383:8:5"
                        },
                        "referencedDeclaration": 1241,
                        "src": "383:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "379:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Exchange_$1241",
                      "typeString": "contract Exchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "359:47:5"
                },
                {
                  "expression": {
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1286,
                        "name": "tokenToExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "412:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1288,
                      "indexExpression": {
                        "id": 1287,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "428:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "412:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1291,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1279,
                          "src": "453:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$1241",
                            "typeString": "contract Exchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Exchange_$1241",
                            "typeString": "contract Exchange"
                          }
                        ],
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "445:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "445:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "412:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "412:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1297,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1279,
                        "src": "484:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      ],
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "476:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1295,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "476:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "476:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1254,
                  "id": 1299,
                  "nodeType": "Return",
                  "src": "469:24:5"
                }
              ]
            },
            "functionSelector": "1648f38e",
            "id": 1301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nameLocation": "136:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "159:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "151:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "150:23:5"
            },
            "returnParameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "190:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:9:5"
            },
            "scope": 1314,
            "src": "127:371:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1312,
              "nodeType": "Block",
              "src": "576:48:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1308,
                      "name": "tokenToExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "589:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1310,
                    "indexExpression": {
                      "id": 1309,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1303,
                      "src": "605:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "589:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1307,
                  "id": 1311,
                  "nodeType": "Return",
                  "src": "582:37:5"
                }
              ]
            },
            "functionSelector": "06f2bf62",
            "id": 1313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "511:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1303,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "531:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "523:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:23:5"
            },
            "returnParameters": {
              "id": 1307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "567:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:9:5"
            },
            "scope": 1314,
            "src": "502:122:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1315,
        "src": "51:575:5",
        "usedErrors": []
      }
    ],
    "src": "0:626:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Factory.sol",
    "exportedSymbols": {
      "Context": [
        670
      ],
      "ERC20": [
        545
      ],
      "Exchange": [
        1241
      ],
      "Factory": [
        1314
      ],
      "IERC20": [
        623
      ],
      "IERC20Metadata": [
        648
      ],
      "IExchange": [
        690
      ],
      "IFactory": [
        682
      ]
    },
    "id": 1315,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1243,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "project:/contracts/Exchange.sol",
        "file": "./Exchange.sol",
        "id": 1244,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1315,
        "sourceUnit": 1242,
        "src": "25:24:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1241
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1314,
        "linearizedBaseContracts": [
          1314
        ],
        "name": "Factory",
        "nameLocation": "60:7:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c3c49a63",
            "id": 1248,
            "mutability": "mutable",
            "name": "tokenToExchange",
            "nameLocation": "107:15:5",
            "nodeType": "VariableDeclaration",
            "scope": 1314,
            "src": "72:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 1247,
              "keyType": {
                "id": 1245,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "80:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "72:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 1246,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "91:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1300,
              "nodeType": "Block",
              "src": "199:299:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1256,
                          "name": "_tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1250,
                          "src": "213:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "238:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1258,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "230:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1257,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "230:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "230:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "213:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420746f6b656e2061646472657373",
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "242:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
                          "typeString": "literal_string \"invalid token address\""
                        },
                        "value": "invalid token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a69802c8ee7e4e9b50fb79f0b1ab99d82142546eb7bdc33452477262794f488",
                          "typeString": "literal_string \"invalid token address\""
                        }
                      ],
                      "id": 1255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "205:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "205:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "205:61:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1266,
                            "name": "tokenToExchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1248,
                            "src": "280:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1268,
                          "indexExpression": {
                            "id": 1267,
                            "name": "_tokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1250,
                            "src": "296:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "280:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "322:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "314:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1269,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "314:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "314:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "280:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786368616e676520616c726561647920657869737473",
                        "id": 1274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "326:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a",
                          "typeString": "literal_string \"exchange already exists\""
                        },
                        "value": "exchange already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_637e97541b61233fff77cd42c55442e62840e32213aa31708cf784bfa2e8aa1a",
                          "typeString": "literal_string \"exchange already exists\""
                        }
                      ],
                      "id": 1265,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "272:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:80:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1276,
                  "nodeType": "ExpressionStatement",
                  "src": "272:80:5"
                },
                {
                  "assignments": [
                    1279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1279,
                      "mutability": "mutable",
                      "name": "exchange",
                      "nameLocation": "368:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1300,
                      "src": "359:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$1241",
                        "typeString": "contract Exchange"
                      },
                      "typeName": {
                        "id": 1278,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1277,
                          "name": "Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1241,
                          "src": "359:8:5"
                        },
                        "referencedDeclaration": 1241,
                        "src": "359:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1285,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1283,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "392:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "379:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Exchange_$1241_$",
                        "typeString": "function (address) returns (contract Exchange)"
                      },
                      "typeName": {
                        "id": 1281,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1280,
                          "name": "Exchange",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1241,
                          "src": "383:8:5"
                        },
                        "referencedDeclaration": 1241,
                        "src": "383:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "379:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Exchange_$1241",
                      "typeString": "contract Exchange"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "359:47:5"
                },
                {
                  "expression": {
                    "id": 1293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1286,
                        "name": "tokenToExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1248,
                        "src": "412:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1288,
                      "indexExpression": {
                        "id": 1287,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1250,
                        "src": "428:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "412:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1291,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1279,
                          "src": "453:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$1241",
                            "typeString": "contract Exchange"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Exchange_$1241",
                            "typeString": "contract Exchange"
                          }
                        ],
                        "id": 1290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "445:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1289,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "445:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "445:17:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "412:50:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1294,
                  "nodeType": "ExpressionStatement",
                  "src": "412:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1297,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1279,
                        "src": "484:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Exchange_$1241",
                          "typeString": "contract Exchange"
                        }
                      ],
                      "id": 1296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "476:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 1295,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "476:7:5",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "476:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1254,
                  "id": 1299,
                  "nodeType": "Return",
                  "src": "469:24:5"
                }
              ]
            },
            "functionSelector": "1648f38e",
            "id": 1301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExchange",
            "nameLocation": "136:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1250,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "159:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "151:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "150:23:5"
            },
            "returnParameters": {
              "id": 1254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1253,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1301,
                  "src": "190:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "189:9:5"
            },
            "scope": 1314,
            "src": "127:371:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1312,
              "nodeType": "Block",
              "src": "576:48:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1308,
                      "name": "tokenToExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1248,
                      "src": "589:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 1310,
                    "indexExpression": {
                      "id": 1309,
                      "name": "_tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1303,
                      "src": "605:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "589:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1307,
                  "id": 1311,
                  "nodeType": "Return",
                  "src": "582:37:5"
                }
              ]
            },
            "functionSelector": "06f2bf62",
            "id": 1313,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nameLocation": "511:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1303,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "531:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "523:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "522:23:5"
            },
            "returnParameters": {
              "id": 1307,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1306,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1313,
                  "src": "567:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1305,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:9:5"
            },
            "scope": 1314,
            "src": "502:122:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1315,
        "src": "51:575:5",
        "usedErrors": []
      }
    ],
    "src": "0:626:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-18T15:02:49.387Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}